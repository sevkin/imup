// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-05-13 17:55:19.456465353 +0300 MSK m=+0.263911943

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "upload image, then make thumbnail 100x100, returns image id",
        "title": "Image Upload API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/upload/form": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload a image from multipart/form-data",
                "parameters": [
                    {
                        "type": "file",
                        "description": "image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.Failed"
                        }
                    }
                }
            }
        },
        "/upload/json": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload a image from application/json",
                "parameters": [
                    {
                        "description": "image file base64 encoded",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.JSONImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.Failed"
                        }
                    }
                }
            }
        },
        "/upload/url": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Upload a image from external url",
                "parameters": [
                    {
                        "type": "string",
                        "format": "url",
                        "description": "image url",
                        "name": "image",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.Failed"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.Failed": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "explained error",
                    "type": "string"
                }
            }
        },
        "server.JSONImage": {
            "type": "object",
            "properties": {
                "image": {
                    "description": "base64 encoded content",
                    "type": "string"
                }
            }
        },
        "server.Success": {
            "type": "object",
            "properties": {
                "uuid": {
                    "description": "uploaded image uuid",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
